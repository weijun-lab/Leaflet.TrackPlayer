(function(k,g){typeof exports=="object"&&typeof module!="undefined"?g(require("leaflet")):typeof define=="function"&&define.amd?define(["leaflet"],g):(k=typeof globalThis!="undefined"?globalThis:k||self,g(k.L))})(this,function(k){"use strict";var Z=(k,g,x)=>new Promise((F,_)=>{var O=b=>{try{I(x.next(b))}catch(w){_(w)}},B=b=>{try{I(x.throw(b))}catch(w){_(w)}},I=b=>b.done?F(b.value):Promise.resolve(b.value).then(O,B);I((x=x.apply(k,g)).next())});var g=63710088e-1,x={centimeters:g*100,centimetres:g*100,degrees:g/111325,feet:g*3.28084,inches:g*39.37,kilometers:g/1e3,kilometres:g/1e3,meters:g,metres:g,miles:g/1609.344,millimeters:g*1e3,millimetres:g*1e3,nauticalmiles:g/1852,radians:1,yards:g*1.0936};function F(e,s,t){t===void 0&&(t={});var a={type:"Feature"};return(t.id===0||t.id)&&(a.id=t.id),t.bbox&&(a.bbox=t.bbox),a.properties=s||{},a.geometry=e,a}function _(e,s,t){if(t===void 0&&(t={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!q(e[0])||!q(e[1]))throw new Error("coordinates must contain numbers");var a={type:"Point",coordinates:e};return F(a,s,t)}function O(e,s,t){if(t===void 0&&(t={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");var a={type:"LineString",coordinates:e};return F(a,s,t)}function B(e,s){s===void 0&&(s="kilometers");var t=x[s];if(!t)throw new Error(s+" units is invalid");return e*t}function I(e,s){s===void 0&&(s="kilometers");var t=x[s];if(!t)throw new Error(s+" units is invalid");return e/t}function b(e){var s=e%(2*Math.PI);return s*180/Math.PI}function w(e){var s=e%360;return s*Math.PI/180}function q(e){return!isNaN(e)&&e!==null&&!Array.isArray(e)}function J(e){return!!e&&e.constructor===Object}function C(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if(e.type==="Feature"&&e.geometry!==null&&e.geometry.type==="Point")return e.geometry.coordinates;if(e.type==="Point")return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function K(e){return e.type==="Feature"?e.geometry:e}var Q=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function U(e,s,t){t===void 0&&(t={});var a=C(e),n=C(s),l=w(n[1]-a[1]),p=w(n[0]-a[0]),u=w(a[1]),f=w(n[1]),v=Math.pow(Math.sin(l/2),2)+Math.pow(Math.sin(p/2),2)*Math.cos(u)*Math.cos(f);return B(2*Math.atan2(Math.sqrt(v),Math.sqrt(1-v)),t.units)}function j(e,s,t,a){a===void 0&&(a={});var n=C(e),l=w(n[0]),p=w(n[1]),u=w(t),f=I(s,a.units),v=Math.asin(Math.sin(p)*Math.cos(f)+Math.cos(p)*Math.sin(f)*Math.cos(u)),P=l+Math.atan2(Math.sin(u)*Math.sin(f)*Math.cos(p),Math.cos(f)-Math.sin(p)*Math.sin(v)),m=b(P),M=b(v);return _([m,M],a.properties)}function R(e,s,t){if(t===void 0&&(t={}),t.final===!0)return W(e,s);var a=C(e),n=C(s),l=w(a[0]),p=w(n[0]),u=w(a[1]),f=w(n[1]),v=Math.sin(p-l)*Math.cos(f),P=Math.cos(u)*Math.sin(f)-Math.sin(u)*Math.cos(f)*Math.cos(p-l);return b(Math.atan2(v,P))}function W(e,s){var t=R(s,e);return t=(t+180)%360,t}function X(e,s,t){t===void 0&&(t={});for(var a=K(e),n=a.coordinates,l=0,p=0;p<n.length&&!(s>=l&&p===n.length-1);p++)if(l>=s){var u=s-l;if(u){var f=R(n[p],n[p-1])-180,v=j(n[p],u,f,t);return v}else return _(n[p])}else l+=U(n[p],n[p+1],t);return _(n[n.length-1])}function G(e,s,t,a){if(a=a||{},!J(a))throw new Error("options is invalid");var n,l=[];if(e.type==="Feature")n=e.geometry.coordinates;else if(e.type==="LineString")n=e.coordinates;else throw new Error("input must be a LineString Feature or Geometry");for(var p=n.length,u=0,f,v,P,m=0;m<n.length&&!(s>=u&&m===n.length-1);m++){if(u>s&&l.length===0){if(f=s-u,!f)return l.push(n[m]),O(l);v=R(n[m],n[m-1])-180,P=j(n[m],f,v,a),l.push(P.geometry.coordinates)}if(u>=t)return f=t-u,f?(v=R(n[m],n[m-1])-180,P=j(n[m],f,v,a),l.push(P.geometry.coordinates),O(l)):(l.push(n[m]),O(l));if(u>=s&&l.push(n[m]),m===n.length-1)return O(l);u+=U(n[m],n[m+1],a)}if(u<s&&n.length===p)throw new Error("Start position is beyond line");var M=n[n.length-1];return O([M,M])}(function(e,s){(function(t,a){a(k)})(Q,function(t){t=t&&t.hasOwnProperty("default")?t.default:t;function a(r,i){var o=i.x-r.x,h=i.y-r.y;return Math.sqrt(o*o+h*h)}var n=function(i,o){return(Math.atan2(o.y-i.y,o.x-i.x)*180/Math.PI+90+360)%360},l=function(i,o){var h=i.value,d=i.isInPixels;return d?h/o:h};function p(r){if(typeof r=="string"&&r.indexOf("%")!==-1)return{value:parseFloat(r)/100,isInPixels:!1};var i=r?parseFloat(r):0;return{value:i,isInPixels:i>0}}var u=function(i,o){return i.x===o.x&&i.y===o.y};function f(r){return r.reduce(function(i,o,h,d){if(h>0&&!u(o,d[h-1])){var c=d[h-1],y=i.length>0?i[i.length-1].distB:0,T=a(c,o);i.push({a:c,b:o,distA:y,distB:y+T,heading:n(c,o)})}return i},[])}function v(r,i){var o=f(r),h=o.length;if(h===0)return[];var d=o[h-1].distB,c=l(i.offset,d),y=l(i.endOffset,d),T=l(i.repeat,d),A=d*T,D=c>0?d*c:0,E=y>0?d*y:0,z=[],N=D;do z.push(N),N+=A;while(A>0&&N<d-E);var H=0,S=o[0];return z.map(function(V){for(;V>S.distB&&H<h-1;)H++,S=o[H];var Y=(V-S.distA)/(S.distB-S.distA);return{pt:P(S.a,S.b,Y),heading:S.heading}})}function P(r,i,o){return i.x!==r.x?{x:r.x+o*(i.x-r.x),y:r.y+o*(i.y-r.y)}:{x:r.x,y:r.y+(i.y-r.y)*o}}(function(){var r=L.Marker.prototype._initIcon,i=L.Marker.prototype._setPos,o=L.DomUtil.TRANSFORM==="msTransform";L.Marker.addInitHook(function(){var h=this.options.icon&&this.options.icon.options,d=h&&this.options.icon.options.iconAnchor;d&&(d=d[0]+"px "+d[1]+"px"),this.options.rotationOrigin=this.options.rotationOrigin||d||"center bottom",this.options.rotationAngle=this.options.rotationAngle||0,this.on("drag",function(c){c.target._applyRotation()})}),L.Marker.include({_initIcon:function(){r.call(this)},_setPos:function(h){i.call(this,h),this._applyRotation()},_applyRotation:function(){this.options.rotationAngle&&(this._icon.style[L.DomUtil.TRANSFORM+"Origin"]=this.options.rotationOrigin,o?this._icon.style[L.DomUtil.TRANSFORM]="rotate("+this.options.rotationAngle+"deg)":this._icon.style[L.DomUtil.TRANSFORM]+=" rotateZ("+this.options.rotationAngle+"deg)")},setRotationAngle:function(h){return this.options.rotationAngle=h,this.update(),this},setRotationOrigin:function(h){return this.options.rotationOrigin=h,this.update(),this}})})(),t.Symbol=t.Symbol||{},t.Symbol.Dash=t.Class.extend({options:{pixelSize:10,pathOptions:{}},initialize:function(i){t.Util.setOptions(this,i),this.options.pathOptions.clickable=!1},buildSymbol:function(i,o,h,d,c){var y=this.options,T=Math.PI/180;if(y.pixelSize<=1)return t.polyline([i.latLng,i.latLng],y.pathOptions);var A=h.project(i.latLng),D=-(i.heading-90)*T,E=t.point(A.x+y.pixelSize*Math.cos(D+Math.PI)/2,A.y+y.pixelSize*Math.sin(D)/2),z=A.add(A.subtract(E));return t.polyline([h.unproject(E),h.unproject(z)],y.pathOptions)}}),t.Symbol.dash=function(r){return new t.Symbol.Dash(r)},t.Symbol.ArrowHead=t.Class.extend({options:{polygon:!0,pixelSize:10,headAngle:60,pathOptions:{stroke:!1,weight:2}},initialize:function(i){t.Util.setOptions(this,i),this.options.pathOptions.clickable=!1},buildSymbol:function(i,o,h,d,c){return this.options.polygon?t.polygon(this._buildArrowPath(i,h),this.options.pathOptions):t.polyline(this._buildArrowPath(i,h),this.options.pathOptions)},_buildArrowPath:function(i,o){var h=Math.PI/180,d=o.project(i.latLng),c=-(i.heading-90)*h,y=this.options.headAngle/2*h,T=c+y,A=c-y,D=t.point(d.x-this.options.pixelSize*Math.cos(T),d.y+this.options.pixelSize*Math.sin(T)),E=t.point(d.x-this.options.pixelSize*Math.cos(A),d.y+this.options.pixelSize*Math.sin(A));return[o.unproject(D),i.latLng,o.unproject(E)]}}),t.Symbol.arrowHead=function(r){return new t.Symbol.ArrowHead(r)},t.Symbol.Marker=t.Class.extend({options:{markerOptions:{},rotate:!1},initialize:function(i){t.Util.setOptions(this,i),this.options.markerOptions.clickable=!1,this.options.markerOptions.draggable=!1},buildSymbol:function(i,o,h,d,c){return this.options.rotate&&(this.options.markerOptions.rotationAngle=i.heading+(this.options.angleCorrection||0)),t.marker(i.latLng,this.options.markerOptions)}}),t.Symbol.marker=function(r){return new t.Symbol.Marker(r)};var m=function(i){return i instanceof t.LatLng||Array.isArray(i)&&i.length===2&&typeof i[0]=="number"},M=function(i){return Array.isArray(i)&&m(i[0])};t.PolylineDecorator=t.FeatureGroup.extend({options:{patterns:[]},initialize:function(i,o){t.FeatureGroup.prototype.initialize.call(this),t.Util.setOptions(this,o),this._map=null,this._paths=this._initPaths(i),this._bounds=this._initBounds(),this._patterns=this._initPatterns(this.options.patterns)},_initPaths:function(i,o){var h=this;if(M(i)){var d=o?i.concat([i[0]]):i;return[d]}return i instanceof t.Polyline?this._initPaths(i.getLatLngs(),i instanceof t.Polygon):Array.isArray(i)?i.reduce(function(c,y){return c.concat(h._initPaths(y,o))},[]):[]},_initPatterns:function(i){return i.map(this._parsePatternDef)},setPatterns:function(i){this.options.patterns=i,this._patterns=this._initPatterns(this.options.patterns),this.redraw()},setPaths:function(i){this._paths=this._initPaths(i),this._bounds=this._initBounds(),this.redraw()},_parsePatternDef:function(i,o){return{symbolFactory:i.symbol,offset:p(i.offset),endOffset:p(i.endOffset),repeat:p(i.repeat)}},onAdd:function(i){this._map=i,this._draw(),this._map.on("moveend",this.redraw,this)},onRemove:function(i){this._map.off("moveend",this.redraw,this),this._map=null,t.FeatureGroup.prototype.onRemove.call(this,i)},_initBounds:function(){var i=this._paths.reduce(function(o,h){return o.concat(h)},[]);return t.latLngBounds(i)},getBounds:function(){return this._bounds},_buildSymbols:function(i,o,h){var d=this;return h.map(function(c,y){return o.buildSymbol(c,i,d._map,y,h.length)})},_getDirectionPoints:function(i,o){var h=this;if(i.length<2)return[];var d=i.map(function(c){return h._map.project(c)});return v(d,o).map(function(c){return{latLng:h._map.unproject(t.point(c.pt)),heading:c.heading}})},redraw:function(){this._map&&(this.clearLayers(),this._draw())},_getPatternLayers:function(i){var o=this,h=this._map.getBounds().pad(.1);return this._paths.map(function(d){var c=o._getDirectionPoints(d,i).filter(function(y){return h.contains(y.latLng)});return t.featureGroup(o._buildSymbols(d,i.symbolFactory,c))})},_draw:function(){var i=this;this._patterns.map(function(o){return i._getPatternLayers(o)}).forEach(function(o){i.addLayer(t.featureGroup(o))})}}),t.polylineDecorator=function(r,i){return new t.PolylineDecorator(r,i)}})})(),function(){var e=L.Marker.prototype._initIcon,s=L.Marker.prototype._setPos,t=L.DomUtil.TRANSFORM==="msTransform";L.Marker.addInitHook(function(){var a=this.options.icon&&this.options.icon.options,n=a&&this.options.icon.options.iconAnchor;n&&(n=n[0]+"px "+n[1]+"px"),this.options.rotationOrigin=this.options.rotationOrigin||n||"center bottom",this.options.rotationAngle=this.options.rotationAngle||0,this.on("drag",function(l){l.target._applyRotation()})}),L.Marker.include({_initIcon:function(){e.call(this)},_setPos:function(a){s.call(this,a),this._applyRotation()},_applyRotation:function(){this.options.rotationAngle&&(this._icon.style[L.DomUtil.TRANSFORM+"Origin"]=this.options.rotationOrigin,t?this._icon.style[L.DomUtil.TRANSFORM]="rotate("+this.options.rotationAngle+"deg)":this._icon.style[L.DomUtil.TRANSFORM]+=" rotateZ("+this.options.rotationAngle+"deg)")},setRotationAngle:function(a){return this.options.rotationAngle=a,this.update(),this},setRotationOrigin:function(a){return this.options.rotationOrigin=a,this.update(),this}})}(),k.TrackPlayer=class{constructor(e,s={}){var n,l,p,u,f,v,P,m,M,r;let t=k.polyline(e)._latlngs;this.track=O(t.map(({lng:i,lat:o})=>[i,o])),this.distanceSlice=[0];const a=this.track.geometry.coordinates;this.distanceSlice=[0];for(let i=1;i<a.length;i++)this.distanceSlice[i]=this.distanceSlice[i-1]+U(a[i-1],a[i]);this.distance=this.distanceSlice[this.distanceSlice.length-1],this.addedToMap=!1,this.options={speed:(n=s.speed)!=null?n:600,weight:(l=s.weight)!=null?l:8,markerIcon:s.markerIcon,polylineDecoratorOptions:(p=s.polylineDecoratorOptions)!=null?p:{patterns:[{offset:30,repeat:60,symbol:k.Symbol.arrowHead({pixelSize:5,headAngle:75,polygon:!1,pathOptions:{stroke:!0,weight:3,color:"#fff"}})}]},passedLineColor:(u=s.passedLineColor)!=null?u:"#0000ff",notPassedLineColor:(f=s.notPassedLineColor)!=null?f:"#ff0000",panTo:(v=s.panTo)!=null?v:!0,markerRotationOrigin:(P=s.markerRotationOrigin)!=null?P:"center",markerRotationOffset:(m=s.markerRotationOffset)!=null?m:0,markerRotation:(M=s.markerRotation)!=null?M:!0,progress:(r=s.progress)!=null?r:0},this.initProgress=s.progress,this.isPaused=!0,this.walkedDistance=0,this.walkedDistanceTemp=0,this.trackIndex=0,this.listenedEvents={start:[],pause:[],finished:[],progressCallback:[]}}addTo(e){if(this.addedToMap)return;if(this.map=e,this.addedToMap=!0,this.options.markerIcon){let t=this.track.geometry.coordinates[0];if(this.marker=k.marker([t[1],t[0]],{icon:this.options.markerIcon}).addTo(this.map),this.options.markerRotation){let a=this.track.geometry.coordinates;this.marker.setRotationAngle(R(a[0],a[1])/2+this.options.markerRotationOffset/2),this.marker.setRotationOrigin(this.options.markerRotationOrigin)}}let s=this.track.geometry.coordinates.map(([t,a])=>[a,t]);return this.notPassedLine=k.polyline(s,{weight:this.options.weight,color:this.options.notPassedLineColor}).addTo(this.map),this.passedLine=k.polyline([],{weight:this.options.weight,color:this.options.passedLineColor}).addTo(this.map),this.polylineDecorator=k.polylineDecorator(s,this.options.polylineDecoratorOptions).addTo(this.map),this.initProgress&&this.setProgress(this.initProgress),this}remove(){this.addedToMap&&(this.addedToMap=!1,this.polylineDecorator.remove(),this.polylineDecorator=null,this.notPassedLine.remove(),this.notPassedLine=null,this.passedLine.remove(),this.passedLine=null,this.marker&&(this.marker.remove(),this.marker=null),this.finished=!1,this.startTimestamp=0,this.pauseTimestamp=0,this.walkedDistanceTemp=0,this.walkedDistance=0,this.trackIndex=0,this.isPaused=!0,this.options.progress=this.initProgress)}start(){!this.isPaused&&!this.finished||!this.addedToMap||((this.options.progress===0||this.options.progress===1)&&(this.startTimestamp=0,this.pauseTimestamp=0,this.walkedDistanceTemp=0,this.walkedDistance=0),this.isPaused=!1,this.finished=!1,this.pauseTimestamp&&this.startTimestamp&&(this.startTimestamp=this.startTimestamp+(Date.now()-this.pauseTimestamp)),this.startAction(),this.listenedEvents.start.forEach(e=>e()),this.initProgress&&this.setProgress(this.initProgress))}pause(){this.isPaused||this.finished||(this.pauseTimestamp=Date.now(),this.isPaused=!0,this.listenedEvents.pause.forEach(e=>e()))}startAction(){let e=this.distance,s=t=>{if(t&&this.addedToMap){let a=e/this.options.speed*3600*1e3;this.startTimestamp||(this.startTimestamp=t);let n=t-this.startTimestamp;this.walkedDistance=e*(n/a)+this.walkedDistanceTemp,this.playAction()}!this.isPaused&&!this.finished&&requestAnimationFrame(s)};s()}playAction(e=!1){if(this.isPaused&&!e)return;let s=this.distance;this.trackIndex=this.distanceSlice.findIndex((n,l,p)=>{var u;return this.walkedDistance>=n&&this.walkedDistance<((u=p[l+1])!=null?u:1/0)});let[t,a]=X(this.track,this.walkedDistance).geometry.coordinates;if(this.markerPoint=[a,t],this.options.panTo&&this.map.panTo(this.markerPoint,{animate:!1}),this.marker&&this.marker.setLatLng(this.markerPoint),this.walkedDistance>=s)this.notPassedLine.setLatLngs([]);else{let n=G(this.track,this.walkedDistance);this.notPassedLine.setLatLngs(n.geometry.coordinates.map(([l,p])=>[p,l]))}if(this.walkedDistance>0){let n=G(this.track,0,this.walkedDistance);this.passedLine.setLatLngs(n.geometry.coordinates.map(([l,p])=>[p,l]))}else this.passedLine.setLatLngs([]);if(this.polylineDecorator.setPaths([...this.passedLine.getLatLngs(),...this.notPassedLine.getLatLngs()]),this.walkedDistance<s&&this.options.markerRotation&&this.marker){let n=0;n=R(_([t,a]),_(this.track.geometry.coordinates[this.trackIndex+1])),this.marker.setRotationAngle(n/2+this.options.markerRotationOffset/2)}if(this.options.progress=Math.min(1,this.walkedDistance/s),this.listenedEvents.progressCallback.forEach(n=>n(this.options.progress,k.latLng(...this.markerPoint),this.trackIndex)),this.walkedDistance>=s&&(this.walkedDistance=s,this.finished=!0,this.listenedEvents.finished.forEach(n=>n()),this.options.markerRotation&&this.marker)){let n=this.track.geometry.coordinates,l=R(_(n.at(-2)),_(n.at(-1)));this.marker.setRotationAngle(l/2+this.options.markerRotationOffset/2)}}setSpeedAction(e){this.options.speed=e,this.walkedDistanceTemp=this.walkedDistance,this.startTimestamp=0}setSpeed(e,s=20){return Z(this,null,function*(){s&&(clearTimeout(this.setSpeedTimeout),yield new Promise(t=>{this.setSpeedTimeout=setTimeout(t,s)})),this.setSpeedAction(e)})}setProgress(e){this.addedToMap&&(this.options.progress==1&&e==1||this.options.progress==0&&e==0||(this.options.progress=e,this.walkedDistanceTemp=this.distance*e,this.startTimestamp=0,(this.isPaused||this.finished)&&(this.walkedDistance=this.walkedDistanceTemp,this.isPaused?this.playAction(!0):(this.finished=!1,this.isPaused=!1,this.startAction()))))}on(e,s){switch(e){case"start":this.listenedEvents.start.push(s);break;case"pause":this.listenedEvents.pause.push(s);break;case"finished":this.listenedEvents.finished.push(s);break;case"progress":this.listenedEvents.progressCallback.push(s);break}}off(e,s){if(!s){this.listenedEvents[e]=[];return}switch(e){case"start":this.listenedEvents.start=this.listenedEvents.start.filter(t=>t!==s);break;case"pause":this.listenedEvents.pause=this.listenedEvents.pause.filter(t=>t!==s);break;case"finished":this.listenedEvents.finished=this.listenedEvents.finished.filter(t=>t!==s);break;case"progress":this.listenedEvents.progressCallback=this.listenedEvents.progressCallback.filter(t=>t!==s);break}}}});
